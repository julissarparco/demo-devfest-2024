name: Deploy to Google Cloud Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Dependencies
        working-directory: ./api
        run: yarn install

      - name: Build Application
        working-directory: ./api
        run: yarn build

      - name: Generate .zip File
        working-directory: ./api
        run: zip -r sarcastic-function.zip .

      - name: Upload to GCS
        working-directory: ./api
        run: gsutil cp sarcastic-function.zip gs://${{ secrets.GCP_BUCKET_NAME }}/

      - name: Create Terraform Variables File
        working-directory: ./terraform
        run: |
          chmod +x ../scripts/create-tfvars.sh
          ../scripts/create-tfvars.sh
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_KEY_SECRET: 'gemini-api-key'
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ secrets.GCP_REGION }}
          SOURCE_ARCHIVE_OBJECT: 'sarcastic-function.zip'

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        run: terraform apply -var-file=variables.tfvars -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Deploy Cloud Function
        working-directory: ./api
        run: |
          gcloud functions deploy sarcastic-response \
            --runtime=nodejs18 \
            --trigger-http \
            --entry-point=sarcasticApp \
            --region=${{ secrets.GCP_REGION }} \
            --source=. \
            --set-env-vars="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
